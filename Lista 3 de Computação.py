# -*- coding: utf-8 -*-
"""Lista de Exercicios 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WuSO5CJH2lGAfGpv8yFXI7pZNCtcKeBg
"""

import random

"""Primeira Lista Lab4_MT.pdf
   Nome : Eduardo da Fonseca (Skye)
   Turma : Nanotecnologia"""

#1.1 Função que retorna concatenação de duas strings no formato abba, recebe duas strings
def concatenacao(s1,s2):
  return s1+s2+s2+s1

#1.2 Recebe uma string um caracer e um numero, e retorna uma string semelhante cujo o caracter na posição do numero
#    da string recebida e substituido pelo caracter recebido 
def substitui(s,x,i):
  if i > len(s):
    return 'insira um numero correspondente ao numero de caracteres da string'
  else:
    return s.replace(s[int(i)], x ,1)

#1.3 Recebe uma string e retorna outra string com uma # no inicio, no meio e no final dela  
def hashtag(s):
  return '#' + s[:int(len(s)/2)] + '#' + s[int((len(s)/2)):] + '#'

#2 Recebe uma tupla com 4 elementos inteiros e retorna outra tupla com apenas os pares de les
def tuplefilter(t):
  aux = tuple()
  aux2 = list(aux)
  for x in t:
    if x % 2 == 0:
      aux2.append(x)
      aux = tuple(aux2)
  return aux

tuplefilter((random.randint(0,6),random.randint(7,15),random.randint(16,28),random.randint(29,33)))

#3 Detector de colisão

"""Segunda Lista lab4IDLE.pdf"""

#1  Recebe nome e notas de alunos em formato de tupla e retorna a media + situação
def SIGA(data):
  media = (data[1] + data[2] + data[3]) / 3
  if media >= 7:
    return (data[0], media, 'aprovado', 'parabens')
  if media < 7 and media >= 5:
    return (data[0], media, 'aprovado')
  if media < 5:
    return (data[0], media, 'reprovado')
  return 'debug'

#2 Recebe o ano de nascimento e retorna o signo do zodiaco chines
def chinesezodiac(anodenascimento):
  zodiac = {
      0 : 'Macaco',
      1 : 'Galo',
      2 : 'Cão',
      3 : 'Porco',
      4 : 'Rato',
      5 : 'Boi',
      6 : 'Tigre',
      7 : 'Coelho',
      8 : 'dragão',
      9 : 'Serpente',
      10 : 'Cavalo',
      11 : 'Carneiro'
  }
  return zodiac[anodenascimento % 12]

#3 Checa se um numero de telefone é valido no brasil, se encaixa nos padrões aceitaveis, e retorna o DDD e o numero de telefone
def vereficarNum(n):
    if len(n) > 9 and len(n) < 12:
        return tuple([n[:2],n[2:]])
    elif len(n) == 9 or len(n) == 8:
        return tuple(['',n])
    return(['',''])

vereficarNum('21994164771')
